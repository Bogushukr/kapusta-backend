{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Kapusta API",
    "description": "Simple documentation for project Kapust a",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "http://localhost:3001"
    },
    {
      "url": "https://kapusta-organizer.herokuapp.com/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    },
    {
      "name": "Reports",
      "description": "Detailed information and reports"
    }
  ],
  "paths": {
    "/api/users/signup/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registration",
        "parameters": [],
        "requestBody": {
          "description": "Auth body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exist",
            "content": {}
          }
        }
      }
    },
    "/api/users/login/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "parameters": [],
        "requestBody": {
          "description": "Login body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Provided email not found",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout/": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful logout",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/users/current/": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Current",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/users/setBalance/": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "SetBalance",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Set balance body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetBalanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's new balance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetBalanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Get all transactions",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Transaction"
        ],
        "summary": "Add new transaction",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Transaction body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/{transactionId}": {
      "delete": {
        "tags": [
          "Transaction"
        ],
        "summary": "Delete transaction",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "type": "string",
            "required": true,
            "description": "transaction Id"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/api/reports/balance/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get balance by parts",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsBalanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/reports/cash-out/{year}/{month}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get expense report for month",
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "schema": {
              "type": "string",
              "example": "2020"
            },
            "required": true,
            "description": "year"
          },
          {
            "in": "path",
            "name": "month",
            "schema": {
              "type": "string",
              "example": "09"
            },
            "required": true,
            "description": "month"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/reports/cash-in/{year}/{month}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get income report for month",
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "schema": {
              "type": "string",
              "example": "2020"
            },
            "required": true,
            "description": "year"
          },
          {
            "in": "path",
            "name": "month",
            "schema": {
              "type": "string",
              "example": "09"
            },
            "required": true,
            "description": "month"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "status": "Success",
                "schema": {
                  "$ref": "#/components/schemas/CashResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/reports/cash-out/last-six-month/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get expense report for last 6 months",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LastSixMonthsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/reports/cash-in/last-six-month/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get income report for last 6 months",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LastSixMonthsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "user name",
            "example": "John"
          },
          "email": {
            "type": "string",
            "description": "user's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "user token",
            "example": "wqwerqdRQFQDSF123KJNL123DAsad212wqwerqdRQFQDSF123KJNL123DAsad212wqwerqdRQFQDSF123KJNL123DAsad212"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "user token",
            "format": "email"
          },
          "balance": {
            "type": "integer",
            "description": "balance",
            "example": 99999
          }
        }
      },
      "SetBalanceRequest": {
        "type": "object",
        "properties": {
          "currentBalance": {
            "type": "integer",
            "description": "new balance",
            "example": 99999
          }
        }
      },
      "SetBalanceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "currentBalance": {
                "type": "integer",
                "description": "balance",
                "example": 99999
              }
            }
          }
        }
      },
      "TransactionResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "desc": {
              "type": "string",
              "description": "Transaction description",
              "example": "one litre of milk"
            },
            "value": {
              "type": "integer",
              "description": "value of transaction",
              "example": 10000
            },
            "cashIncome": {
              "type": "boolean",
              "description": false
            },
            "expenseCategories": {
              "type": "string",
              "description": "expense category",
              "example": "food"
            },
            "incomeCategories": {
              "type": "string",
              "description": "income category",
              "example": "salary"
            },
            "year": {
              "type": "string",
              "description": "transaction year",
              "example": "2020"
            },
            "month": {
              "type": "string",
              "description": "transaction month",
              "example": "8"
            },
            "day": {
              "type": "string",
              "description": "transaction day",
              "example": "7"
            }
          }
        }
      },
      "AddTransactionRequest": {
        "type": "object",
        "required": [
          "value",
          "year",
          "month",
          "day"
        ],
        "properties": {
          "desc": {
            "type": "string",
            "description": "Transaction description",
            "example": "my salary"
          },
          "value": {
            "type": "integer",
            "description": "value of transaction",
            "example": 45000
          },
          "cashIncome": {
            "type": "boolean",
            "description": true
          },
          "expenseCategories": {
            "type": "string",
            "description": "expense category",
            "example": "null"
          },
          "incomeCategories": {
            "type": "string",
            "description": "income category",
            "example": "salary"
          },
          "year": {
            "type": "string",
            "description": "transaction year",
            "example": "2020"
          },
          "month": {
            "type": "string",
            "description": "transaction month",
            "example": "9"
          },
          "day": {
            "type": "string",
            "description": "transaction day",
            "example": "7"
          }
        }
      },
      "AddTransactionResponse": {
        "type": "object",
        "properties": {
          "desc": {
            "type": "string",
            "description": "Transaction description",
            "example": "my salary"
          },
          "value": {
            "type": "integer",
            "description": "value of transaction",
            "example": 45000
          },
          "cashIncome": {
            "type": "boolean",
            "description": true
          },
          "expenseCategories": {
            "type": "string",
            "description": "expense category",
            "example": "null"
          },
          "incomeCategories": {
            "type": "string",
            "description": "income category",
            "example": "salary"
          },
          "year": {
            "type": "string",
            "description": "transaction year",
            "example": "2020"
          },
          "month": {
            "type": "string",
            "description": "transaction month",
            "example": "9"
          },
          "day": {
            "type": "string",
            "description": "transaction day",
            "example": "7"
          }
        }
      },
      "ReportsBalanceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "cashOutBalance": {
                "type": "integer",
                "description": "expense values",
                "example": 1000
              },
              "cashInBalance": {
                "type": "integer",
                "description": "cash in values",
                "example": 1000
              },
              "balance": {
                "type": "integer",
                "description": "full balance",
                "example": 2000
              }
            }
          }
        }
      },
      "CashResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "transactionListMonth": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "transaction id",
                      "example": "14124123kjlkh123141234123"
                    }
                  }
                }
              },
              "cashOutMonth": {
                "type": "integer",
                "description": "expenses in month",
                "example": 1000
              },
              "cashInMonth": {
                "type": "integer",
                "description": "cash in month",
                "example": 1000
              },
              "details": {
                "type": "object",
                "properties": {
                  "categoriesAndDescription": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "id"
                        },
                        "totalByCategory": {
                          "type": "integer",
                          "description": "total value in category",
                          "example": 10000
                        },
                        "desc": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "desc": {
                                "type": "string",
                                "description": "description",
                                "example": "food"
                              },
                              "desc": {
                                "total": "string",
                                "description": "total",
                                "example": "total"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "LastSixMonthsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "result": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "user id",
                      "example": "14124123kjlkh123141234123"
                    },
                    "month": {
                      "type": "string",
                      "description": "month",
                      "example": "09"
                    },
                    "year": {
                      "type": "string",
                      "description": "year",
                      "example": "2021"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}

